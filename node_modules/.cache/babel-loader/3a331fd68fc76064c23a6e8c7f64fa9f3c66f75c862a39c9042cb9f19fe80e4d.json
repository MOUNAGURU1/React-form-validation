{"ast":null,"code":"var _jsxFileName = \"C:\\\\myapp\\\\myapp\\\\client\\\\src\\\\Email.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Email({\n  value,\n  onChange\n}) {\n  _s();\n  const [error, setError] = useState(\"\");\n  const handleChange = e => {\n    const email = e.target.value;\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    if (!email) {\n      setError('Email is required');\n    } else if (!emailRegex.test(email)) {\n      setError('Invalid email format');\n    } else {\n      setError('');\n    }\n    onChange(email);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Email:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: value,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(Email, \"Wysf5k9/9rbzWl+spWgJpEWy35U=\");\n_c = Email;\n;\nexport default Email;\nvar _c;\n$RefreshReg$(_c, \"Email\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Email","value","onChange","_s","error","setError","handleChange","e","email","target","emailRegex","test","children","fileName","_jsxFileName","lineNumber","columnNumber","type","style","color","_c","$RefreshReg$"],"sources":["C:/myapp/myapp/client/src/Email.js"],"sourcesContent":["import React,{useState} from \"react\";\r\n\r\nfunction Email({ value, onChange }) {\r\n    const [error, setError] = useState(\"\");\r\n\r\n    const handleChange = (e) => {\r\n        const email = e.target.value;\r\n        const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n        if (!email) {\r\n          setError('Email is required');\r\n        } else if (!emailRegex.test(email)) {\r\n          setError('Invalid email format');\r\n        } else {\r\n          setError('');\r\n        }\r\n        onChange(email);\r\n      };\r\n\r\n\r\nreturn (\r\n    <div>\r\n      <label>Email:</label>\r\n      <input type=\"text\" value={value} onChange={handleChange} />\r\n      {error && <span style={{ color: \"red\" }}>{error}</span>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Email;"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,QAAQ,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,SAASC,KAAKA,CAAC;EAAEC,KAAK;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAChC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMS,YAAY,GAAIC,CAAC,IAAK;IACxB,MAAMC,KAAK,GAAGD,CAAC,CAACE,MAAM,CAACR,KAAK;IAC5B,MAAMS,UAAU,GAAG,4BAA4B;IAC/C,IAAI,CAACF,KAAK,EAAE;MACVH,QAAQ,CAAC,mBAAmB,CAAC;IAC/B,CAAC,MAAM,IAAI,CAACK,UAAU,CAACC,IAAI,CAACH,KAAK,CAAC,EAAE;MAClCH,QAAQ,CAAC,sBAAsB,CAAC;IAClC,CAAC,MAAM;MACLA,QAAQ,CAAC,EAAE,CAAC;IACd;IACAH,QAAQ,CAACM,KAAK,CAAC;EACjB,CAAC;EAGP,oBACIT,OAAA;IAAAa,QAAA,gBACEb,OAAA;MAAAa,QAAA,EAAO;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACrBjB,OAAA;MAAOkB,IAAI,EAAC,MAAM;MAAChB,KAAK,EAAEA,KAAM;MAACC,QAAQ,EAAEI;IAAa;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAC1DZ,KAAK,iBAAIL,OAAA;MAAMmB,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAM,CAAE;MAAAP,QAAA,EAAER;IAAK;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpD,CAAC;AAEV;AAACb,EAAA,CAxBQH,KAAK;AAAAoB,EAAA,GAALpB,KAAK;AAwBb;AAED,eAAeA,KAAK;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}