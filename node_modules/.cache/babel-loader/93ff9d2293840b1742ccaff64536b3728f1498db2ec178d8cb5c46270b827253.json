{"ast":null,"code":"var _jsxFileName = \"C:\\\\myapp\\\\myapp\\\\client\\\\src\\\\PasswordInput.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PasswordInput = ({\n  value,\n  onChange\n}) => {\n  _s();\n  const [error, setError] = useState('');\n  const handleChange = e => {\n    const password = e.target.value;\n    const capitalLetter = /[A-Z]/;\n    const smallLetter = /[a-z]/;\n    const specialCharacter = /[!@#$%^&*(),.?\":{}|<>]/;\n    if (!password) {\n      setError('Password is required');\n    } else if (password.length < 8) {\n      setError('Password must be at least 8 characters long');\n    } else if (!capitalLetter.test(password)) {\n      setError('Password must contain at least one capital letter');\n    } else if (!smallLetter.test(password)) {\n      setError('Password must contain at least one small letter');\n    } else if (!specialCharacter.test(password)) {\n      setError('Password must contain at least one special character');\n    } else {\n      setError('');\n    }\n    onChange(password);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Password:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      value: value,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(PasswordInput, \"/PuDV6TKqxF+sNNiHmyv2C3jNxE=\");\n_c = PasswordInput;\nexport default PasswordInput;\nvar _c;\n$RefreshReg$(_c, \"PasswordInput\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","PasswordInput","value","onChange","_s","error","setError","handleChange","e","password","target","capitalLetter","smallLetter","specialCharacter","length","test","children","fileName","_jsxFileName","lineNumber","columnNumber","type","style","color","_c","$RefreshReg$"],"sources":["C:/myapp/myapp/client/src/PasswordInput.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst PasswordInput = ({ value, onChange }) => {\r\n  const [error, setError] = useState('');\r\n\r\n  const handleChange = (e) => {\r\n    const password = e.target.value;\r\n    const capitalLetter = /[A-Z]/;\r\n    const smallLetter = /[a-z]/;\r\n    const specialCharacter = /[!@#$%^&*(),.?\":{}|<>]/;\r\n    \r\n    if (!password) {\r\n      setError('Password is required');\r\n    } else if (password.length < 8) {\r\n      setError('Password must be at least 8 characters long');\r\n    } else if (!capitalLetter.test(password)) {\r\n      setError('Password must contain at least one capital letter');\r\n    } else if (!smallLetter.test(password)) {\r\n      setError('Password must contain at least one small letter');\r\n    } else if (!specialCharacter.test(password)) {\r\n      setError('Password must contain at least one special character');\r\n    } else {\r\n      setError('');\r\n    }\r\n    onChange(password);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <label>Password:</label>\r\n      <input type=\"password\" value={value} onChange={handleChange} />\r\n      {error && <span style={{ color: 'red' }}>{error}</span>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PasswordInput;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,aAAa,GAAGA,CAAC;EAAEC,KAAK;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC7C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMS,YAAY,GAAIC,CAAC,IAAK;IAC1B,MAAMC,QAAQ,GAAGD,CAAC,CAACE,MAAM,CAACR,KAAK;IAC/B,MAAMS,aAAa,GAAG,OAAO;IAC7B,MAAMC,WAAW,GAAG,OAAO;IAC3B,MAAMC,gBAAgB,GAAG,wBAAwB;IAEjD,IAAI,CAACJ,QAAQ,EAAE;MACbH,QAAQ,CAAC,sBAAsB,CAAC;IAClC,CAAC,MAAM,IAAIG,QAAQ,CAACK,MAAM,GAAG,CAAC,EAAE;MAC9BR,QAAQ,CAAC,6CAA6C,CAAC;IACzD,CAAC,MAAM,IAAI,CAACK,aAAa,CAACI,IAAI,CAACN,QAAQ,CAAC,EAAE;MACxCH,QAAQ,CAAC,mDAAmD,CAAC;IAC/D,CAAC,MAAM,IAAI,CAACM,WAAW,CAACG,IAAI,CAACN,QAAQ,CAAC,EAAE;MACtCH,QAAQ,CAAC,iDAAiD,CAAC;IAC7D,CAAC,MAAM,IAAI,CAACO,gBAAgB,CAACE,IAAI,CAACN,QAAQ,CAAC,EAAE;MAC3CH,QAAQ,CAAC,sDAAsD,CAAC;IAClE,CAAC,MAAM;MACLA,QAAQ,CAAC,EAAE,CAAC;IACd;IACAH,QAAQ,CAACM,QAAQ,CAAC;EACpB,CAAC;EAED,oBACET,OAAA;IAAAgB,QAAA,gBACEhB,OAAA;MAAAgB,QAAA,EAAO;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACxBpB,OAAA;MAAOqB,IAAI,EAAC,UAAU;MAACnB,KAAK,EAAEA,KAAM;MAACC,QAAQ,EAAEI;IAAa;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAC9Df,KAAK,iBAAIL,OAAA;MAAMsB,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAM,CAAE;MAAAP,QAAA,EAAEX;IAAK;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpD,CAAC;AAEV,CAAC;AAAChB,EAAA,CAhCIH,aAAa;AAAAuB,EAAA,GAAbvB,aAAa;AAkCnB,eAAeA,aAAa;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}